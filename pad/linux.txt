环境变量设置 /etc/profile
export MAVEN_HOME=/work/tool/maven/apache-maven-3.6.0
export JAVA_HOME=/usr/share/jdk1.8.0_171 
export CLASSPATH=.:$JAVA_HOME/lib/tools.jar/$JAVA_HOME/lib/dt.jar:$CLASSPATH
export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$PATH

maven安装，下载压缩包，然后在某个路径下解压，然后配置到环境变量中就可以了。

安装sonarQube
1、下载好安装包
2、安装好java和maven
3、sudo sh bin/sonar.sh console
4、报错
5、在logs中有很多日志，在es.log中发现报错can not run elasticsearch as root。嗯，之前都是sudo执行，因为不加sudo会有很多没有权限，当时没有想那么多就直接执行了，现在报错了那就修改文件权限，sudo chown -R user:group sonarDIR。
6、继续执行报错，在web.log中发现是数据库端口占用，将占用端口应用停掉
7、继续执行成功，访问9000可以看到界面



mvn sonar:sonar -Dsonar.host.url=http://172.30.4.213:9000 -Dsonar.login=a2897d7a13423bafc46a0fe826bc2d0dd5bba687


安装vsftpd
下载离线包，安装离线包；
配置文件；
创建用户
useradd -d /home/dqhd/web_bridge -g ftp -s /sbin/nologin user_kfq
可以通过usermod命令修改用户根目录、所属组、登陆方式
设置密码
passwd user_kfq

修改vsftpd.conf配置文件。需要修改的如下
// 不允许匿名用户登录
anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=022
anon_upload_enable=NO
anon_mkdir_write_enable=NO
connect_from_port_20=YES
xferlog_file=/var/log/xferlog
data_connection_timeout=120
ftpd_banner=Welcome to blah FTP service.
deny_email_enable=YES
// 这里还有一个配置是chroot_local_user，如果这个配置选择yes，则表示所有用户都要指定到根目录，chroot_list_file中记录的就是哪些用户可以不指定，如果配置了chroot_list_user=yes则表示list中的用户需要指定到根目录。
chroot_list_enable=YES
// list表，记录用户
chroot_list_file=/etc/vsftpd/chroot_list
// 监听IPv4sockets
listen=YES
pam_service_name=vsftpd
userlist_enable=YES
// 加完以后登录速度起飞
reverse_lookup_enable=NO
// 如果提示用户拥有根目录写权限，不允许登录，则加这个配置，表示可以登陆。
allow_writeable_chroot=YES
// 配置用户权限
user_config_dir=/etc/vsftpd/vsftpd_user_conf

启动服务
记得看状态是不是启动状态

登陆用户，报错，各种文件打不开，查看发现目录下没有这些文件，应该就是配置文件中配置了，但是系统中没有文件，所以只需要在系统相应目录下创建空文件就可以了。

报错IPV6IPv4相关错误，忘记具体错误是什么了，总之就是由于监听了两种导致的错误，在配置文件中注释掉一个即可，在这次配置中只需要监听IPv4就可以了，所以配置中配置了listen=yes。

报错，连接超时，在公司服务器没有出现这个问题，但是在现场的服务器上就出现了。在配置文件中增加reverse_lookup_enable=NO，登陆速度飞起，这个配置表示不查找DNS服务器。

报错，提示用户拥有根目录的写权限，这个是vsftpd的安全问题，不允许用户有根目录的写权限，所以在配置文件中增加allow_writeable_chroot=YES。

报错，Received unexpected end-of-file from SFTP server
原因是端口和地址错误，端口默认是21，写成了22。地址前面加了sftp，应该什么也不用加。

限制A用户打开B用户文件夹，设置文件夹权限700。保证除了root和该用户外，其他用户打不开文件夹。

shell脚本
$0,$1,$2
$0表示脚本本身的文件名
$1表示传入的第一个参数，以此类推。

$(cmd),先执行cmd，然后将cmd的标准输出替换$(cmd)。
${}，在变量拼接的时候分不清哪个是变量的时候使用，${aa}_AA和$aa_AA显然表示不一样，前者是变量aa拼接后面的字符；

匹配正则  =~
以下脚本是匹配指定目录下（不指定则表示当前路径），打印匹配的文件名称
files=$(ls $1)
filename=$(date +%Y%m%d)
pattern=${filename}\.sql$

for file in $files
do
  if [[ "$file" =~ $pattern ]]
  then
    echo $file
  fi
done

服务器间免密码传输文件
step1
服务器A
ssh-keygen -t rsa
一路回车
如下：
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:DrlgeWkOqr4O9Ov9T7lCPWLyiE7GIz/buqxRGxwFMYg root@ServerA
The key's randomart image is:
+---[RSA 2048]----+
|. .+o.           |
|E.  o            |
|   .             |
|  . .. o         |
| . += * S        |
|. +ooB B o.      |
|.o.B. O oo.      |
|..Bo=. o. .      |
|+==X=o..oo       |
+----[SHA256]-----+

在~/.ssh目录下会生成两个文件
id_rsa  id_rsa.pub
step2
传输公钥id_rsa.pub给目标服务器B
目录相同，如果已存在记得换个名字；
在服务器B下，~/.ssh 下执行
cat id_rsa.pub_temp >> authorized_keys
id_rsa.pub_temp为服务器传过来的公钥。
step3
测试scp,从服务器A传输文件到服务器B不会要密码了。

目前发送13上数据库备份到78.10上的shell如下：

#!/bin/bash

# 复制业务库备份文件到78.10服务器
# 只复制最新的文件，即当天备份的

remote_ip=10.233.78.10
remote_user=root
remote_dir=/work/mysql-bk

path="/home/mysql/backup"
files=$(ls $path)
# 只发送当天数据
filename=$(date +%Y%m%d)
pattern=${filename}\.sql$

for file in $files
do
  if [[ "$file" =~ $pattern ]]
  then
    echo $file
    scp ${path}/${file} ${remote_user}@${remote_ip}:$remote_dir
  fi
done

man df
df -lh 查看磁盘空间
df -h /dir 查看dir下的控件，和所属分区
这里需要补充下Linux磁盘的内容

自动删除文件脚本

#! /bin/bash

# auto remove files

DIR="/opt/tomcat/apache-tomcat-8.0.52/logs"
# find the suitable files to remove
find ${DIR}/ -name 'host*\.log' -mtime +30  -exec rm -rf {} \;

man find
find [path] [exp]
-name 按名称查找，需要注意的是，这里不完全支持正则，比如‘^ $’等符号就不支持，目前还不明白，使用-name就简单匹配名称就好，如果要用正则需要用 -regex，但是-regex匹配的是这个文件的完整路径，所以需要在表达式前加‘.*’。所以为了以防万一，不小心匹配到其他路径的文件，我们需要在正则中加上明确的路径。在执行删除操作的时候最好别用。

-mtime 表示修改时间 +30表示修改时间比当前时间早30天以上的；

-exec 表示对查询结果进行处理，后面的{}就表示查询的结果，比如 -exec mv {} {}.old 就是将查询到的文件全部重新命名，增加了.old； 最后的\;是规定写法。

修改文件或者目录的所属者/组
chown [options] user [:group] file
		-R	递归修改 recursive

man selinux
修改/etc/selinux/config 文件
将SELINUX=enforcing改为SELINUX=disabled

查看状态
getenforce
临时设置状态，重启后失效
setenforce 0    ##设置SELinux 成为permissive模式##setenforce 1 设置SELinux 成为enforcing模式

man usermod
用于修改用户相关信息
usermod -d /home/user user

man chmod
用于修改文件目录权限
chmod 777 dir/file

u	owner	文件所属用户 
g	group	文件所属用户组
o	other	其他用户
a	all		所有用户

查看用户所属组
groups [user] 不写用户则表示当前用户；
id	   [user] 同上

chmod u+x dir/file 	给文件的owner增加可执行权限，目录的可执行权限意味着是否可以进入目录的权限。

Linux特殊文件
Linux files

记录用户相关信息，一行为一个用户；
/etc/passwd

存放组信息
/etc/group

存放环境变量，全局变量，对所有用户生效，可以使用env查看所有环境变量
/etc/profile

存放CPU信息  
/proc/cpuinfo
	查看CPU数量  grep 'model name' /proc/cpuinfo | wc -l

用于存放自己下载安装的软件
/usr/local


man lsof
list open files
lsof [option] [file]

查看port端口的进程
lsof -i :port

man netstat
netstat [option]
print network connections;

-t tcp
-u udp
-n numerc, show ip
-p program, show program msg
-l listening, show the listening program msg

查看特定端口
netstat -tunlp | grep port

man wc
word count
wc [option] ... [file]
print newline, word, and byte counts for each file

-l print newline counts;
-c print byte counts;
-w print word counts;


linux安装/更新软件
install or update software

centos rpm

rpm [option]

-i	install;
-v	show msg;
-h	show procedure;0~100%;
-U	update, if not install yet, install software first;
-F	update, when you have install the software;

eg:
rpm -ivh xxx.rpm
rpm -U xxx.rpm

man stress
下载了stress压缩包stress-1.0.4.tar.gz
解压
tar -zxvf stress-1.0.4.tar.gz
执行configure
./configure
执行之后一般会成功，出错的话一般是缺少环境，比如GCC；
编译
make
安装
make install
安装路径默认/usr/local/bin

Linux info
内存
free
硬盘
df -lh  详见man df

修改ip地址
在目录/etc/sysconfig/network-scripts/ 下
找到需要修改的文件，一般为第一个ifcfg-ens33（名称可能不一样）
TYPE=Ethernet
BOOTPROTO=static   # 这里默认是dhcp动态获取，改为static，表示静态获取，否则不生效
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
NAME=eno16777736
UUID=9e8d604f-d991-4aa2-88a3-4c679e6f139c
DEVICE=eno16777736
ONBOOT=yes
PEERDNS=yes
PEERROUTES=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
HWADDR=00:0c:29:ce:3f:3c  #MAC地址  可以不配置
IPADDR=192.168.1.104     #静态IP   
GATEWAY=192.168.1.2     #默认网关
NETMASK=255.255.255.0    #子网掩码
DNS1=192.168.1.2         #DNS配置   可以不配置

虚拟机修改为桥接模式，在VMware中将虚拟机的网络配置修改为桥接，桥接网络选择宿主机正在使用的网络，然后按照上述的步骤固定虚拟机ip地址

man cat
将一个文件拼接到另一个文件后面（追加）
cat a.txt >> b.txt
>> 为追加，> 为重定向，会覆盖
